# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import minitwitter_pb2 as minitwitter__pb2


class MiniTwitterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendMessage = channel.unary_unary(
                '/minitwitter.MiniTwitter/SendMessage',
                request_serializer=minitwitter__pb2.Message.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetMessages = channel.unary_unary(
                '/minitwitter.MiniTwitter/GetMessages',
                request_serializer=minitwitter__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=minitwitter__pb2.GetMessagesResponse.FromString,
                )
        self.GetAttachment = channel.unary_unary(
                '/minitwitter.MiniTwitter/GetAttachment',
                request_serializer=minitwitter__pb2.GetAttachmentsRequest.SerializeToString,
                response_deserializer=minitwitter__pb2.GetAttachmentsResponse.FromString,
                )
        self.AddLike = channel.unary_unary(
                '/minitwitter.MiniTwitter/AddLike',
                request_serializer=minitwitter__pb2.AddLikeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddComment = channel.unary_unary(
                '/minitwitter.MiniTwitter/AddComment',
                request_serializer=minitwitter__pb2.AddCommentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetLikes = channel.unary_unary(
                '/minitwitter.MiniTwitter/GetLikes',
                request_serializer=minitwitter__pb2.GetLikesRequest.SerializeToString,
                response_deserializer=minitwitter__pb2.GetLikesResponse.FromString,
                )
        self.GetComments = channel.unary_unary(
                '/minitwitter.MiniTwitter/GetComments',
                request_serializer=minitwitter__pb2.GetCommentsRequest.SerializeToString,
                response_deserializer=minitwitter__pb2.GetCommentsResponse.FromString,
                )
        self.Register = channel.unary_unary(
                '/minitwitter.MiniTwitter/Register',
                request_serializer=minitwitter__pb2.RegisterRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class MiniTwitterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttachment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddLike(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLikes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetComments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MiniTwitterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=minitwitter__pb2.Message.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=minitwitter__pb2.GetMessagesRequest.FromString,
                    response_serializer=minitwitter__pb2.GetMessagesResponse.SerializeToString,
            ),
            'GetAttachment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttachment,
                    request_deserializer=minitwitter__pb2.GetAttachmentsRequest.FromString,
                    response_serializer=minitwitter__pb2.GetAttachmentsResponse.SerializeToString,
            ),
            'AddLike': grpc.unary_unary_rpc_method_handler(
                    servicer.AddLike,
                    request_deserializer=minitwitter__pb2.AddLikeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddComment': grpc.unary_unary_rpc_method_handler(
                    servicer.AddComment,
                    request_deserializer=minitwitter__pb2.AddCommentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetLikes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLikes,
                    request_deserializer=minitwitter__pb2.GetLikesRequest.FromString,
                    response_serializer=minitwitter__pb2.GetLikesResponse.SerializeToString,
            ),
            'GetComments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComments,
                    request_deserializer=minitwitter__pb2.GetCommentsRequest.FromString,
                    response_serializer=minitwitter__pb2.GetCommentsResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=minitwitter__pb2.RegisterRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'minitwitter.MiniTwitter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MiniTwitter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/SendMessage',
            minitwitter__pb2.Message.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/GetMessages',
            minitwitter__pb2.GetMessagesRequest.SerializeToString,
            minitwitter__pb2.GetMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAttachment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/GetAttachment',
            minitwitter__pb2.GetAttachmentsRequest.SerializeToString,
            minitwitter__pb2.GetAttachmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddLike(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/AddLike',
            minitwitter__pb2.AddLikeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/AddComment',
            minitwitter__pb2.AddCommentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLikes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/GetLikes',
            minitwitter__pb2.GetLikesRequest.SerializeToString,
            minitwitter__pb2.GetLikesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetComments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/GetComments',
            minitwitter__pb2.GetCommentsRequest.SerializeToString,
            minitwitter__pb2.GetCommentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minitwitter.MiniTwitter/Register',
            minitwitter__pb2.RegisterRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
